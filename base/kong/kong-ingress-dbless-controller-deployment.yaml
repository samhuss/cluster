---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ingress-kong-controller
  name: ingress-kong-controller
  namespace: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-kong-controller
  template:
    metadata:
      annotations:
        prometheus.io/port: "8100"
        prometheus.io/scrape: "true"
        traffic.sidecar.istio.io/includeInboundPorts: ""
        kuma.io/gateway: enabled
      labels:
        app: ingress-kong-controller
    spec:
      serviceAccountName: kong-serviceaccount
      containers:
      - name: ingress-controller
        env:
        - name: CONTROLLER_KONG_ADMIN_URL
          value: "https://127.0.0.1:8444"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "kong/kong-proxy"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: kong-docker-kubernetes-ingress-controller.bintray.io/kong-ingress-controller:0.9.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: admin
          containerPort: 8444
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
